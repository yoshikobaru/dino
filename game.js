let totalDPS = parseInt(localStorage.getItem('totalDPS')) || 0;
let availableGames = parseInt(localStorage.getItem('availableGames')) || 5;
let nextHeartTime = parseInt(localStorage.getItem('nextHeartTime')) || Date.now() + 5 * 60 * 1000;

function updateTimer() {
    const now = Date.now();
    if (now >= nextHeartTime) {
        if (availableGames < 5) {
            availableGames++;
            localStorage.setItem('availableGames', availableGames);
        }
        nextHeartTime = now + 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç
        localStorage.setItem('nextHeartTime', nextHeartTime);
    }
    
    const remainingTime = Math.ceil((nextHeartTime - now) / 1000);
    const minutes = Math.floor(remainingTime / 60);
    const seconds = remainingTime % 60;
    
    return {
        time: `${minutes}:${seconds.toString().padStart(2, '0')}`,
        availableGames: availableGames
    };
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è DOM
setInterval(() => {
    const timerData = updateTimer();
    localStorage.setItem('availableGames', timerData.availableGames);
    if (document.getElementById('timer')) {
        document.getElementById('timer').textContent = `–°–ª–µ–¥—É—é—â–µ–µ —Å–µ—Ä–¥—Ü–µ —á–µ—Ä–µ–∑: ${timerData.time}`;
    }
    if (document.getElementById('lives')) {
        document.getElementById('lives').innerHTML = '‚ù§Ô∏è'.repeat(timerData.availableGames) + 'üñ§'.repeat(5 - timerData.availableGames);
    }
}, 1000);

document.addEventListener('DOMContentLoaded', () => {
    const gamePage = document.getElementById('game-page');
    const gameContainer = document.getElementById('gameContainer');
    const startButton = document.getElementById('startButton');
    const livesDisplay = document.getElementById('lives');
    const timerDisplay = document.createElement('div');
    timerDisplay.id = 'timer';
    livesDisplay.parentNode.insertBefore(timerDisplay, livesDisplay.nextSibling);
    
    let gameIframe;

    function loadGame() {
        if (!gameIframe) {
            gameIframe = document.createElement('iframe');
            gameIframe.src = 'game/index.html';
            gameIframe.style.width = '100%';
            gameIframe.style.height = '300px';
            gameIframe.style.border = 'none';
            gameContainer.appendChild(gameIframe);
        }
    }

    function updateAvailableGamesDisplay() {
        const timerData = updateTimer();
        livesDisplay.innerHTML = '‚ù§Ô∏è'.repeat(timerData.availableGames) + 'üñ§'.repeat(5 - timerData.availableGames);
        
        if (timerData.availableGames < 5) {
            timerDisplay.textContent = `–°–ª–µ–¥—É—é—â–µ–µ —Å–µ—Ä–¥—Ü–µ —á–µ—Ä–µ–∑: ${timerData.time}`;
            timerDisplay.style.display = 'block';
        } else {
            timerDisplay.style.display = 'none';
        }
    }

    function startGame() {
        if (availableGames > 0) {
            availableGames--;
            localStorage.setItem('availableGames', availableGames);
            updateAvailableGamesDisplay();
            startButton.style.display = 'none';
            if (gameIframe && gameIframe.contentWindow.main) {
                gameIframe.contentWindow.main();
            }
        }
    }

    startButton.addEventListener('click', startGame);

    window.addEventListener('message', (event) => {
        if (event.data.type === 'gameOver') {
            if (availableGames > 0) {
                startButton.style.display = 'block';
            } else {
                startButton.style.display = 'none';
                livesDisplay.innerHTML = '–ò–≥—Ä—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å';
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∫–∏ –∫ –æ–±—â–µ–º—É –±–∞–ª–∞–Ω—Å—É
            const gameScore = event.data.score;
            totalDPS += gameScore;
            localStorage.setItem('totalDPS', totalDPS);
            updateTotalScore();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ—á–∫–∞—Ö
            alert(`–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${gameScore} DPS! –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${totalDPS} DPS`);
        }
    });

    document.querySelector('button[data-page="game"]').addEventListener('click', () => {
        if (gamePage.style.display !== 'none') {
            loadGame();
            updateAvailableGamesDisplay();
            updateTimer();
            if (availableGames > 0) {
                startButton.style.display = 'block';
            } else {
                startButton.style.display = 'none';
                livesDisplay.innerHTML = '–ò–≥—Ä—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å';
            }
        }
    });
});

function updateTotalScore() {
    const totalScoreElement = document.querySelector('.text-3xl.font-bold.text-black');
    if (totalScoreElement) {
        totalScoreElement.textContent = `${totalDPS} DPS`;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
window.updateTotalScore = updateTotalScore;
